@model IEnumerable<Certificates2024.Models.CandidateCertificate>
@{
    ViewBag.Title = "Exams";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
{
    <h1 class="display-6" style="margin-bottom: 0.5em">List of my Exams</h1>
}
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <h1 class="display-6" style="margin-bottom: 0.5em">List of all Exams</h1>
}
<hr/>
    @if (User.Identity.IsAuthenticated)
    {<p>
        <a asp-action="Create" class="btn btn-success">Book an Exam Now</a> 
    </p>}
<br/>
<h2>Current Exams</h2>
<hr/>
<table class="table table-striped table-borderless">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Candidate.FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.Candidate.LastName)</th>
            <th>@Html.DisplayNameFor(model => model.CertificateTopic.TopicName)</th>
            <th>@Html.DisplayNameFor(model => model.ExaminationDate)</th>
            <th>@Html.DisplayNameFor(model => model.CandidateScore)</th>
            <th>@Html.DisplayNameFor(model => model.MaximumScore)</th>
            <th>@Html.DisplayNameFor(model => model.ResultLabel)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(x => x.ExaminationDate > DateTime.Now.AddHours(-2)).OrderBy(x => x.ExaminationDate))
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Candidate.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.Candidate.LastName)</td>
                <td>@Certificates2024.Data.Static.EnumExtensions.GetDescription(item.CertificateTopic.TopicName)</td>
                <td>@Html.DisplayFor(modelItem => item.ExaminationDate)</td>
                <td>@Html.DisplayFor(modelItem => item.CandidateScore)</td>
                <td>@Html.DisplayFor(modelItem => item.MaximumScore)</td>
                <td><span>Pending</span></td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm text-white">Details</a>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Edit</a>
                        @if (item.CandidateTestId == null)
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                        }
                    }
                    @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                    {
                        @if (item.IsTestEligible)
                        {
                            <a asp-controller="Tests" asp-action="Start" asp-route-topicId="@item.CertificateTopic.Id" asp-route-candidateCertificateId="@item.Id" class="btn btn-success btn-sm">Start Test</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>
                                Not Eligible to Start
                                <span class="tooltip" title="You need to meet the eligibility criteria to start this test."></span>
                            </button>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<h2>Past Exams</h2>
<hr/>
<table class="table table-striped table-borderless">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Candidate.FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.Candidate.LastName)</th>
            <th>@Html.DisplayNameFor(model => model.CertificateTopic.TopicName)</th>
            <th>@Html.DisplayNameFor(model => model.ExaminationDate)</th>
            <th>@Html.DisplayNameFor(model => model.CandidateScore)</th>
            <th>@Html.DisplayNameFor(model => model.MaximumScore)</th>
            <th>@Html.DisplayNameFor(model => model.ResultLabel)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(x => x.ExaminationDate <= DateTime.Now.AddHours(-2)).OrderBy(x => x.ExaminationDate))
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Candidate.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.Candidate.LastName)</td>
                <td>@Certificates2024.Data.Static.EnumExtensions.GetDescription(item.CertificateTopic.TopicName)</td>
                <td>@Html.DisplayFor(modelItem => item.ExaminationDate)</td>
                <td>@Html.DisplayFor(modelItem => item.CandidateScore)</td>
                <td>@Html.DisplayFor(modelItem => item.MaximumScore)</td>
                <td>
                    @if (item.ResultLabel)
                    {
                        <span>Exam Passed</span>
                    }
                    else
                    {
                        <span>Exam Failed</span>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm text-white">Details</a>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Edit</a>
                        @if (item.CandidateTestId == null)
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                        }
                    }
                    
                </td>
            </tr>
        }
    </tbody>
</table>
